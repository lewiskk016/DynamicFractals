#property version   "1.00"
#property strict

// Input parameters
input int DeMarkerPeriod = 14; // DeMarker period
input double OverboughtLevel = 70; // Overbought level
input double OversoldLevel = 30; // Oversold level

//+------------------------------------------------------------------+
//| Expert initialization function                                   |
//+------------------------------------------------------------------+
int OnInit()
  {
   return(INIT_SUCCEEDED);
  }

  //+------------------------------------------------------------------+
//| Expert deinitialization function                                 |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {

  }
//+------------------------------------------------------------------+
//| Expert tick function                                             |
//+------------------------------------------------------------------+
void OnTick()
  {
   double DeMarkerBuffer[];
   int calculated_bars = IndicatorCounted();
   int start_bar = Bars - calculated_bars - 1;

    // Calculate DeMarker values
   if (CopyBuffer(0, 0, start_bar, calculated_bars, DeMarkerBuffer) < 0)
     {
      Print("Could not copy buffer: ", GetLastError());
      return;
     }

   // Calculate buy and sell signals
   if (DeMarkerBuffer[1] > OverboughtLevel && DeMarkerBuffer[0] <= OverboughtLevel)
     {
      // Sell signal
      OrderSend(Symbol(), OP_SELL, 0.1, Ask, 4, 0, 0, "DeMarker E.A.", 0, 0, clrRed);
     }
   else if (DeMarkerBuffer[1] < OversoldLevel && DeMarkerBuffer[0] >= OversoldLevel)
     {
      // Buy signal
      OrderSend(Symbol(), OP_BUY, 0.1, Bid, 4, 0, 0, "DeMarker EA", 0, 0, clrGreen);
     }
  }
//+------------------------------------------------------------------+
