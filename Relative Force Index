#property indicator_chart_window
#property indicator_buffers 1
#property indicator_plots   1

//--- indicator parameters
input int      RFI_Period = 14;    // Period
input int      RFI_Smooth = 3;     // Smoothing period

//--- indicator buffers
double         RFIBuffer[];

//--- plot Label1
#property indicator_label1  "RFI"
#property indicator_type1   DRAW_LINE
#property indicator_color1  clrRed
#property indicator_style1  STYLE_SOLID
#property indicator_width1  1

//+------------------------------------------------------------------+
//| Custom indicator initialization function                         |
//+------------------------------------------------------------------+
int OnInit()
  {
   // Indicator buffers mapping
   SetIndexBuffer(0, RFIBuffer);

   // Set the indicator label
   PlotIndexSetString(0, PLOT_LABEL, "RFI");

   return(INIT_SUCCEEDED);
  }

  //+------------------------------------------------------------------+
//| Relative Force Index                                             |
//+------------------------------------------------------------------+
double RelativeForceIndex(const int index)
{
   double prevClose = Close[index + 1];
   double force = High[index] - prevClose;
   double prevForce = Low[index] - prevClose;

 for(int i = index - 1; i > index - RFI_Period; i--)
   {
      double currentForce = High[i] - Close[i + 1];
      double currentPrevForce = Low[i] - Close[i + 1];
      force += currentForce;
      prevForce += currentPrevForce;
   }

   if (prevForce == 0)
      return (force == 0 ? 50 : 100);
   else
      return (force / prevForce) * 100;
}

//+------------------------------------------------------------------+
//| Custom indicator iteration function                              |
//+------------------------------------------------------------------+
int OnCalculate(const int rates_total,
                const int prev_calculated,
                const datetime &time[],
                const double &open[],
                const double &high[],
                const double &low[],
                const double &close[],
                const long &tick_volume[],
                const long &volume[],
                const int &spread[])
