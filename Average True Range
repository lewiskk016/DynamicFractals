#property strict

// Input parameters
input int atr_period = 14;              // ATR period
input double risk_percent = 2.0;        // Risk percentage per trade
input int stop_loss_pips = 30;          // Stop loss distance in pips
input int take_profit_pips = 60;        // Take profit distance in pips
input int trailing_stop_pips = 20;      // Trailing stop distance in pips
input bool use_time_filter = true;      // Use time filter
input int start_hour = 8;               // Start hour for trading
input int end_hour = 20;                // End hour for trading
input bool use_additional_confirmation = false; // Use additional confirmation
input int ma_period = 50;               // Moving average period
input int rsi_period = 14;              // RSI period
input double rsi_overbought_level = 70; // RSI overbought level
input double rsi_oversold_level = 30;   // RSI oversold level

//+------------------------------------------------------------------+
//| Expert initialization function                                   |
//+------------------------------------------------------------------+
int OnInit()
  {
   return(INIT_SUCCEEDED);
}

//+------------------------------------------------------------------+
//| Expert deinitialization function                                 |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {
  }
//+------------------------------------------------------------------+
//| Expert tick function                                             |
//+------------------------------------------------------------------+

void OnTick()
  {
   double atr = iATR(NULL, 0, atr_period, 0);  // Calculate ATR

   double risk_per_trade = AccountFreeMarginCheck(Symbol(),OP_BUY,1.0)/atr*risk_percent;

   // Buy condition: If current price crosses above the previous high plus ATR * 1
   if (High[1] + atr * 1 < Ask)
 // Calculate lot size based on risk percentage
      double lot_size = risk_per_trade / MarketInfo(Symbol(), MODE_MARGINREQUIRED);

      // Open a buy trade
      if (OrderSend(Symbol(), OP_BUY, lot_size, Ask, 3, 0, 0, "Buy order", 0, 0, clrGreen) > 0) {
         Print("Buy order opened successfully");
      } else {
         Print("Error opening buy order: ", GetLastError());
      }
   }

    // Sell condition: If current price crosses below the previous low minus ATR * 1
   if (Low[1] - atr * 1 > Bid) {
      // Calculate lot size based on risk percentage
      double lot_size = risk_per_trade / MarketInfo(Symbol(), MODE_MARGINREQUIRED);

      // Open a sell trade
      if (OrderSend(Symbol(), OP_SELL, lot_size, Bid, 3, 0, 0, "Sell order", 0, 0, clrRed) > 0) {
         Print("Sell order opened successfully");
      } else {
         Print("Error opening sell order: ", GetLastError());
      }
   }
  }
//+------------------------------------------------------------------+
